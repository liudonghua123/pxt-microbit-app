{
    "validatorPlans": [
        {
            ".desc": "Set the LED screen.",
            "name": "show_icon_on_screen",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": {
                        "basic_show_icon": 1
                    }
                }
            ]
        },
        {
            ".desc": "Read input from a GPIO pin.",
            "name": "read_gpio_pin",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": {
                        "device_pin_event": 1
                    }
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": {
                        "device_pin_is_pressed": 1
                    }
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": {
                        "device_pin_released": 1
                    }
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": {
                        "device_get_digital_pin": 1
                    }
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": {
                        "device_get_analog_pin": 1
                    }
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": {
                        "pins_on_pulsed": 1
                    }
                }
            ]
        },
        {
            ".desc": "Set the radio group.",
            "name": "set_radio_group",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": {
                        "radio_set_group": 1
                    }
                }
            ]
        },
        {
            ".desc": "Send a string over radio.",
            "name": "send_radio_string",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": {
                        "radio_datagram_send_string": 1
                    }
                }
            ]
        },
        {
            ".desc": "shows a parameter variable value on the screen",
            "name": "show_parameter_value_on_screen",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": {
                        "device_print_message": 1
                    },
                    "childValidatorPlans": ["parameter_variable_accessed"]
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": {
                        "device_show_number": 1
                    },
                    "childValidatorPlans": ["numeric_parameter_variable_accessed"]
                }
            ]
        },
        {
            ".desc": "set radio group on start",
            "name": "set_radio_group_on_start",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": {
                        "pxt-on-start": 1
                    },
                    "childValidatorPlans": ["set_radio_group"]
                }
            ]
        },
        {
            ".desc": "send radio string in button press event.",
            "name": "send_radio_string_on_button_press",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": {
                        "device_button_event": 1
                    },
                    "childValidatorPlans": ["send_radio_string"]
                }
            ]
        },
        {
            ".desc": "one or more of the possible 'on radio received' blocks are present",
            "name": "any_on_radio_received",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": {
                        "radio_on_number_drag": 1
                    }
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": {
                        "radio_on_value_drag": 1
                    }
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": {
                        "radio_on_string_drag": 1
                    }
                }
            ]
        },
        {
            ".desc": "one or more of the possible 'on radio received' blocks are present and display the received content on the screen.",
            "name": "on_radio_received_and_displayed",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": {
                        "radio_on_number_drag": 1
                    },
                    "childValidatorPlans": ["show_parameter_value_on_screen"]
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": {
                        "radio_on_value_drag": 1
                    },
                    "childValidatorPlans": ["show_parameter_value_on_screen"]
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": {
                        "radio_on_string_drag": 1
                    },
                    "childValidatorPlans": ["show_parameter_value_on_screen"]
                }
            ]
        },
        {
            ".desc:": "on shake gesture",
            "name": "on_shake_gesture",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blockFieldValueExists",
                    "fieldType": "NAME",
                    "fieldValue": "Gesture.Shake",
                    "blockType": "device_gesture_event"
                }
            ]
        },
        {
            ".desc": "declare a variable with name 'hand'",
            "name": "variable_declared_called_hand",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blockFieldValueExists",
                    "fieldType": "VAR",
                    "fieldValue": "hand",
                    "blockType": "variables_set"
                }
            ]
        },
        {
            ".desc": "'pick random' block is present",
            "name": "pick_random_exists",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": {
                        "device_random": 1
                    }
                }
            ]
        },
        {
            ".desc": "'if/else' block is present",
            "name": "conditional_exists",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": {
                        "controls_if": 1
                    }
                }
            ]
        },
        {
            ".desc": "read value of 'hand' variable",
            "name": "hand_variable_accessed",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blockFieldValueExists",
                    "fieldType": "VAR",
                    "fieldValue": "hand",
                    "blockType": "variables_get"
                }
            ]
        },
        {
            ".desc": "'hand' equal to number",
            "name": "hand_equal_to_number",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blockFieldValueExists",
                    "fieldType": "OP",
                    "fieldValue": "EQ",
                    "blockType": "logic_compare",
                    "childValidatorPlans": ["hand_variable_accessed"]
                }
            ]
        },
        {
            ".desc": "show icon when condition is true",
            "name": "conditional_show_icon",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": {
                        "controls_if": 1
                    },
                    "childValidatorPlans": ["show_icon_on_screen"]
                }
            ]
        }
    ]
}
