{
    "validatorPlans": [
        {
            ".desc": "Set the LED screen.",
            "name": "show_icon_on_screen",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "basic_show_icon",
                            "count": 1
                        }
                    ]
                }
            ]
        },
        {
            ".desc": "Shows something on the LED screen.",
            "name": "has_output",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksInSetExist",
                    "blocks": [
                        "device_show_number",
                        "device_show_leds",
                        "basic_show_icon",
                        "device_print_message",
                        "device_plot",
                        "device_led_toggle",
                        "device_plot_bar_graph",
                        "device_plot_brightness",
                        "device_show_image_offset",
                        "device_scroll_image",

                        "game_create_sprite",
                        "game_game_over",
                        "game_add_score",
                        "game_remove_life",
                        "game_start_countdown",

                        "music_playable_play",
                        "device_ring",
                        "music_playable_play_default_bkg",

                        "device_set_digital_pin",
                        "device_set_servo_pin"
                    ],
                    "count": 1
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "game_set_life",
                            "count": 1
                        }
                    ],
                    "childValidatorPlans": ["number_zero"]
                }
            ]
        },
        {
            ".desc": "Processes input in any form (TODO : Non-Empty Check for event blocks)",
            "name": "uses_input",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksInSetExist",
                    "blocks": [
                        "control_on_event",
                        "device_button_event",
                        "device_gesture_event",
                        "device_pin_event",
                        "device_pin_released",
                        "input_logo_event",
                        "input_on_sound",
                        "pins_on_pulsed",
                        "radio_on_number_drag",
                        "radio_on_string_drag",
                        "radio_on_value_drag",
                        "serial_on_data_received",

                        "device_acceleration",
                        "device_get_analog_pin",
                        "device_get_button2",
                        "device_get_digital_pin",
                        "device_get_light_level",
                        "device_get_magnetic_force",
                        "device_get_rotation",
                        "device_get_running_time",
                        "device_get_running_time_micros",
                        "device_get_sound_level",
                        "device_heading",
                        "device_pin_is_pressed",
                        "device_temperature",
                        "deviceisgesture",
                        "input_logo_is_pressed",
                        "music_sound_is_playing",
                        "pins_i2c_readnumber",
                        "pins_pulse_duration",
                        "pins_pulse_in",
                        "serial_read_buffer",
                        "serial_read_line",
                        "serial_read_until",
                        "serial_readbuffer"
                    ],
                    "count": 1
                }
            ]
        },
        {
            ".desc": "Runs code in response to any event (TODO : Non-Empty Check)",
            "name": "responds_to_events",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksInSetExist",
                    "blocks": [
                        "control_on_event",
                        "device_button_event",
                        "device_gesture_event",
                        "device_pin_event",
                        "device_pin_released",
                        "input_logo_event",
                        "input_on_sound",
                        "melody_on_event",
                        "pins_on_pulsed",
                        "radio_on_number_drag",
                        "radio_on_string_drag",
                        "radio_on_value_drag",
                        "serial_on_data_received"
                    ],
                    "count": 0
                }
            ]
        },
        {
            ".desc": "Checks for blocks that reference LEDs by their coordinates",
            "name": "uses_led_coordinates",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksInSetExist",
                    "blocks": [
                        "device_plot",
                        "device_led_toggle",
                        "device_unplot",
                        "device_point",
                        "device_plot_brightness",
                        "device_point_brightness",
                        "game_create_sprite"
                    ],
                    "count": 0
                }
            ]
        },
        {
            ".desc": "Checks that radio group is set and at least one radio send message block is present",
            "name": "sends_radio_message",
            "threshold": 2,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "radio_set_group",
                            "count": 1
                        }
                    ]
                },
                {
                    "validator": "blocksInSetExist",
                    "blocks": [
                        "radio_datagram_send",
                        "radio_datagram_send_value",
                        "radio_datagram_send_string"
                    ],
                    "count": 1
                }
            ]
        },
        {
            ".desc": "Checks that radio group is set and at least block that listens for radio messages is present. (TODO : Non-Empty Check)",
            "name": "receives_radio_message",
            "threshold": 2,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "radio_set_group",
                            "count": 1
                        }
                    ]
                },
                {
                    "validator": "blocksInSetExist",
                    "blocks": [
                        "radio_on_number_drag",
                        "radio_on_value_drag",
                        "radio_on_string_drag"
                    ],
                    "count": 1
                }
            ]
        },
        {
            ".desc": "Set the radio group.",
            "name": "set_radio_group",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "radio_set_group",
                            "count": 1
                        }
                    ]
                }
            ]
        },
        {
            ".desc": "Send a string over radio.",
            "name": "send_radio_string",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "radio_datagram_send_string",
                            "count": 1
                        }
                    ]
                }
            ]
        },
        {
            ".desc": "shows a parameter variable value on the screen",
            "name": "show_parameter_value_on_screen",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "device_print_message",
                            "count": 1
                        }
                    ],
                    "childValidatorPlans": ["parameter_variable_accessed"]
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "device_show_number",
                            "count": 1
                        }
                    ],
                    "childValidatorPlans": ["numeric_parameter_variable_accessed"]
                }
            ]
        },
        {
            ".desc": "set radio group on start",
            "name": "set_radio_group_on_start",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "pxt-on-start",
                            "count": 1
                        }
                    ],
                    "childValidatorPlans": ["set_radio_group"]
                }
            ]
        },
        {
            ".desc": "send radio string in button press event.",
            "name": "send_radio_string_on_button_press",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "device_button_event",
                            "count": 1
                        }
                    ],
                    "childValidatorPlans": ["send_radio_string"]
                }
            ]
        },
        {
            ".desc": "one or more of the possible 'on radio received' blocks are present",
            "name": "any_on_radio_received",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "radio_on_number_drag",
                            "count": 1
                        }
                    ]
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "radio_on_value_drag",
                            "count": 1
                        }
                    ]
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "radio_on_string_drag",
                            "count": 1
                        }
                    ]
                }
            ]
        },
        {
            ".desc": "one or more of the possible 'on radio received' blocks are present and display the received content on the screen.",
            "name": "on_radio_received_and_displayed",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "radio_on_number_drag",
                            "count": 1
                        }
                    ],
                    "childValidatorPlans": ["show_parameter_value_on_screen"]
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "radio_on_value_drag",
                            "count": 1
                        }
                    ],
                    "childValidatorPlans": ["show_parameter_value_on_screen"]
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "radio_on_string_drag",
                            "count": 1
                        }
                    ],
                    "childValidatorPlans": ["show_parameter_value_on_screen"]
                }
            ]
        },
        {
            ".desc:": "on shake gesture",
            "name": "on_shake_gesture",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blockFieldValueExists",
                    "fieldType": "NAME",
                    "fieldValue": "Gesture.Shake",
                    "blockType": "device_gesture_event"
                }
            ]
        },
        {
            ".desc": "declare a variable with name 'hand'",
            "name": "variable_declared_called_hand",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blockFieldValueExists",
                    "fieldType": "VAR",
                    "fieldValue": "hand",
                    "blockType": "variables_set"
                }
            ]
        },
        {
            ".desc": "read value of 'hand' variable",
            "name": "hand_variable_accessed",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blockFieldValueExists",
                    "fieldType": "VAR",
                    "fieldValue": "hand",
                    "blockType": "variables_get"
                }
            ]
        },
        {
            ".desc": "'hand' equal to number",
            "name": "hand_equal_to_number",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blockFieldValueExists",
                    "fieldType": "OP",
                    "fieldValue": "EQ",
                    "blockType": "logic_compare",
                    "childValidatorPlans": ["hand_variable_accessed"]
                }
            ]
        },
        {
            ".desc": "show icon when condition is true",
            "name": "conditional_show_icon",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "controls_if",
                            "count": 1
                        }
                    ],
                    "childValidatorPlans": ["show_icon_on_screen"]
                }
            ]
        },
        {
            ".desc": "get sound level",
            "name": "get_sound_level",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "device_get_sound_level",
                            "count": 1
                        }
                    ]
                }
            ]
        },
        {
            ".desc": "sound level greater than number",
            "name": "soundlevel_greater_than_check",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blockFieldValueExists",
                    "fieldType": "OP",
                    "fieldValue": "GT",
                    "blockType": "logic_compare",
                    "childValidatorPlans": ["get_sound_level", "math_num_exists"]
                }
            ]
        },
        {
            ".desc": "variable with name col is set to random number",
            "name": "col_variable_set_random",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blockFieldValueExists",
                    "fieldType": "VAR",
                    "fieldValue": "col",
                    "blockType": "variables_set",
                    "childValidatorPlans": ["device_random_used"]
                }
            ]
        },
        {
            ".desc": "variable with name row is set to random number",
            "name": "row_variable_set_random",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blockFieldValueExists",
                    "fieldType": "VAR",
                    "fieldValue": "row",
                    "blockType": "variables_set",
                    "childValidatorPlans": ["device_random_used"]
                }
            ]
        },
        {
            ".desc": "variable with name col is accessed",
            "name": "col_variable_accessed",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blockFieldValueExists",
                    "fieldType": "VAR",
                    "fieldValue": "col",
                    "blockType": "variables_get"
                }
            ]
        },
        {
            ".desc": "variable with name col is accessed",
            "name": "row_variable_accessed",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blockFieldValueExists",
                    "fieldType": "VAR",
                    "fieldValue": "row",
                    "blockType": "variables_get"
                }
            ]
        },
        {
            ".desc": "sound level check in if statement wtih two variables set blocks",
            "name": "soundlevel_gt_condition",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "controls_if",
                            "count": 1
                        }
                    ],
                    "childValidatorPlans": [
                        "soundlevel_greater_than_check",
                        "row_variable_set_random",
                        "col_variable_set_random"
                    ]
                }
            ]
        },
        {
            ".desc": "point block used for boolean check",
            "name": "point_bool_check",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "device_point",
                            "count": 1
                        }
                    ],
                    "childValidatorPlans": ["row_variable_accessed", "col_variable_accessed"]
                }
            ]
        },
        {
            ".desc": "unplot block filled with row, col variables",
            "name": "unplot_vars_used",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "device_unplot",
                            "count": 1
                        }
                    ],
                    "childValidatorPlans": ["col_variable_accessed", "row_variable_accessed"]
                }
            ]
        },
        {
            ".desc": "variable with name col is accessed",
            "name": "col_add_num",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blockFieldValueExists",
                    "fieldType": "OP",
                    "fieldValue": "ADD",
                    "blockType": "math_arithmetic",
                    "childValidatorPlans": ["col_variable_accessed", "math_num_exists"]
                }
            ]
        },
        {
            ".desc": "plot block filled with math add between row, num; and col variables",
            "name": "plot_vars_used",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "device_plot",
                            "count": 1
                        }
                    ],
                    "childValidatorPlans": ["col_add_num", "row_variable_accessed"]
                }
            ]
        },
        {
            ".desc": "point block in if statement with unplot, plot in its body",
            "name": "point_condition",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "controls_if",
                            "count": 1
                        }
                    ],
                    "childValidatorPlans": ["point_bool_check", "unplot_vars_used", "plot_vars_used"]
                }
            ]
        },
        {
            ".desc": "repeat loop nests two conditions in its body",
            "name": "repeat_loop_nested_conditions",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "controls_repeat_ext",
                            "count": 1
                        }
                    ],
                    "childValidatorPlans": ["point_condition", "soundlevel_gt_condition"]
                }
            ]
        },
        {
            ".desc": "show icon on start",
            "name": "show_icon_on_start",
            "threshold": 1,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "pxt-on-start",
                            "count": 1
                        }
                    ],
                    "childValidatorPlans": ["show_icon_on_screen"]
                }
            ]
        },
        {
            ".desc": "checks that the program aligns to the end tutorial program",
            "name": "blow_away_completeness",
            "threshold": 2,
            "checks": [
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "device_forever",
                            "count": 1
                        }
                    ],
                    "childValidatorPlans": ["repeat_loop_nested_conditions"]
                },
                {
                    "validator": "blocksExist",
                    "blockCounts": [
                        {
                            "blockId": "pxt-on-start",
                            "count": 1
                        }
                    ],
                    "childValidatorPlans": ["show_icon_on_screen"]
                }
            ]
        }
    ]
}
